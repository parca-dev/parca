name: goreleaser

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build UI
        run: make ui

      # TODO(kakkoyun): Disabled until fixing the authentication issue.
      #      - name: Login to Github Container Registry
      #        uses: docker/login-action@v1
      #        with:
      #          registry: ghcr.io
      #          username: ${{ github.actor }}
      #          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # GITHUB_TOKEN

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  manifests:
    name: Manifests generate and release
    runs-on: ubuntu-latest
    needs: goreleaser
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Set up Jsonnet
        run: ./env-jsonnet.sh

      - name: Generate
        run: cd deploy && make --always-make vendor manifests

      - name: Prepare
        run: |
          tar -zcvf deploy/manifests.tar.gz deploy/manifests

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            deploy/manifests.tar.gz
            deploy/manifests/manifest.yaml

  publish-docs:
    name: Publish Netlify
    runs-on: ubuntu-latest
    needs: manifests
    steps:
      - uses: actions/checkout@master

      - name: Publish Netlify
        uses: netlify/actions/build@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Publish Vercel
        run: |
          curl -X POST "https://api.vercel.com/v1/integrations/deploy/${{ secrets.VERCEL_WEBHOOK }}"

  container:
    name: Container build and push
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build container
        run: make container

      - name: Login to registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | buildah login -u parca-dev --password-stdin ghcr.io

      - name: Push container
        run: |
          make push-container
