name: Container

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - Dockerfile*
      - .dockerignore
      - ui/**
      - .github/workflows/container.yml
  pull_request:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - Dockerfile*
      - .dockerignore
      - ui/**
      - .github/workflows/container.yml

env:
  # renovate: datasource=go depName=github.com/goreleaser/goreleaser
  GORELEASER_VERSION: v1.9.2

jobs:
  build-container:
    name: Container build and push (when merged)
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      packages: write
      contents: read

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Set up Go
        uses: actions/setup-go@b22fbbc2921299758641fab08929b4ac52b32923 # tag=v3.2.0
        with:
          go-version-file: .go-version
          check-latest: true
          cache: true

      - name: Set up Node.js
        uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd # tag=v3.3.0
        with:
          node-version-file: .node-version
          cache: 'yarn'

      - name: Set Tag
        run: |
          echo "goreleaser_current_tag=`git describe --match 'v*' --tags`" >> $GITHUB_ENV

      - name: Build binaries
        uses: goreleaser/goreleaser-action@68acf3b1adf004ac9c2f0a4259e85c5f66e99bef # tag=v3.0.0
        with:
          distribution: goreleaser
          version: ${{ env.GORELEASER_VERSION }}
          args: build --rm-dist --skip-validate --snapshot
        env:
          GORELEASER_CURRENT_TAG: "${{ env.goreleaser_current_tag }}"

      - name: Get branch name
        shell: bash
        run: echo "GITHUB_BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      # To build multi-arch images, see also: https://github.com/redhat-actions/buildah-build#multi-arch-builds
      - name: Install QEMU dependency
        run: |
          sudo apt-get update -y
          sudo apt-get install -y binfmt-support qemu-user-static

      - name: Build container
        run: make container

      - name: Check images created
        run: podman images | grep 'ghcr.io/parca-dev/parca'

      - name: Install cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25 # tag=v2.4.0

      - name: Install crane
        if: ${{ github.event_name != 'pull_request' }}
        uses: imjasonh/setup-crane@5146f708a817ea23476677995bf2133943b9be0b # tag=v0.1

      - name: Login to registry
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login -u parca-dev --password-stdin ghcr.io
          echo "${{ secrets.QUAY_PASSWORD }}" | docker login -u "${{ secrets.QUAY_USERNAME }}" --password-stdin quay.io

      - name: Push and sign container
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: true
        run: |
          make push-container
          make sign-container
          make push-signed-quay-container
