name: Container

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # renovate: datasource=go depName=github.com/goreleaser/goreleaser
  GORELEASER_VERSION: v1.10.2

jobs:
  skip-check:
    name: Skip check
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip-check.outputs.should_skip }}
    permissions:
      actions: write
      contents: read
    steps:
      - id: skip-check
        uses: fkirc/skip-duplicate-actions@9d116fa7e55f295019cfab7e3ab72b478bcf7fdd # tag=v4.0.0
        with:
          do_not_skip: '["schedule", "workflow_dispatch"]'
          paths: |-
            [
              "**.go",
              ".dockerignore",
              ".github/workflows/container.yml",
              ".go-version",
              ".node-version",
              "Dockerfile*",
              "go.mod",
              "go.sum",
              "ui/**"
            ]
          skip_after_successful_duplicate: false

  build-container:
    name: Container build and push (when merged)
    needs: skip-check
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      packages: write
      contents: read

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Set up Go
        uses: actions/setup-go@84cbf8094393cdc5fe1fe1671ff2647332956b1a # tag=v3.2.1
        with:
          go-version-file: .go-version
          check-latest: true
          cache: true

      - name: Set up Node.js
        uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd # tag=v3.3.0
        with:
          node-version-file: .node-version
          cache: 'yarn'

      - name: Set Tag
        run: |
          echo "goreleaser_current_tag=`git describe --match 'v*' --tags`" >> $GITHUB_ENV

      - name: Build binaries
        uses: goreleaser/goreleaser-action@68acf3b1adf004ac9c2f0a4259e85c5f66e99bef # tag=v3.0.0
        with:
          distribution: goreleaser
          version: ${{ env.GORELEASER_VERSION }}
          args: build --rm-dist --skip-validate --snapshot
        env:
          GORELEASER_CURRENT_TAG: "${{ env.goreleaser_current_tag }}"

      - name: Get branch name
        shell: bash
        run: echo "GITHUB_BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      # To build multi-arch images, see also: https://github.com/redhat-actions/buildah-build#multi-arch-builds
      - name: Install QEMU dependency
        run: |
          sudo apt-get update -y
          sudo apt-get install -y binfmt-support qemu-user-static

      - name: Build container
        run: make container

      - name: Check images created
        run: podman images | grep 'ghcr.io/parca-dev/parca'

      - name: Install cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@48866aa521d8bf870604709cd43ec2f602d03ff2 # tag=v2.4.1

      - name: Install crane
        if: ${{ github.event_name != 'pull_request' }}
        uses: imjasonh/setup-crane@5146f708a817ea23476677995bf2133943b9be0b # tag=v0.1

      - name: Login to registry
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login -u parca-dev --password-stdin ghcr.io
          echo "${{ secrets.QUAY_PASSWORD }}" | docker login -u "${{ secrets.QUAY_USERNAME }}" --password-stdin quay.io

      - name: Push and sign container
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: true
        run: |
          make push-container
          make sign-container
          make push-signed-quay-container
