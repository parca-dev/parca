// @generated by protoc-gen-connect-web v0.8.4 with parameter "target=ts"
// @generated from file parca/debuginfo/v1alpha1/debuginfo.proto (package parca.debuginfo.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { InitiateUploadRequest, InitiateUploadResponse, MarkUploadFinishedRequest, MarkUploadFinishedResponse, ShouldInitiateUploadRequest, ShouldInitiateUploadResponse, UploadRequest, UploadResponse } from "./debuginfo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * DebuginfoService is a service that allows storage of debug info
 *
 * @generated from service parca.debuginfo.v1alpha1.DebuginfoService
 */
export const DebuginfoService = {
  typeName: "parca.debuginfo.v1alpha1.DebuginfoService",
  methods: {
    /**
     * Upload ingests debug info for a given build_id
     *
     * @generated from rpc parca.debuginfo.v1alpha1.DebuginfoService.Upload
     */
    upload: {
      name: "Upload",
      I: UploadRequest,
      O: UploadResponse,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * ShouldInitiateUpload returns whether an upload for a given build_id should be initiated or not.
     *
     * @generated from rpc parca.debuginfo.v1alpha1.DebuginfoService.ShouldInitiateUpload
     */
    shouldInitiateUpload: {
      name: "ShouldInitiateUpload",
      I: ShouldInitiateUploadRequest,
      O: ShouldInitiateUploadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * InitiateUpload returns a strategy and information to upload debug info for a given build_id.
     *
     * @generated from rpc parca.debuginfo.v1alpha1.DebuginfoService.InitiateUpload
     */
    initiateUpload: {
      name: "InitiateUpload",
      I: InitiateUploadRequest,
      O: InitiateUploadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * MarkUploadFinished marks the upload as finished for a given build_id.
     *
     * @generated from rpc parca.debuginfo.v1alpha1.DebuginfoService.MarkUploadFinished
     */
    markUploadFinished: {
      name: "MarkUploadFinished",
      I: MarkUploadFinishedRequest,
      O: MarkUploadFinishedResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

